import streamlit as st
import pandas as pd
import datetime
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from config.estilo import aplicar_estilo
from datetime import datetime

st.set_page_config(page_title="Raio-X Comportamental", layout="centered")
aplicar_estilo()

# Cabe√ßalho com imagem
st.markdown(
    """
    <div style="text-align: center;">
        <h1 style="color: #5e412f;">üß† Raio-X Comportamental</h1>
        <p style="font-size: 1.1rem; max-width: 700px; margin: 0 auto;">
            Ol√°! Prazer, meu nome √© <strong>Giulia</strong>. Sou nutricionista e desenvolvi este question√°rio para ajudar voc√™ a entender melhor seus padr√µes alimentares e pensamentos que podem estar interferindo nos seus resultados.
        </p>
        <p style="font-size: 1rem; color: #6a5d4d;">
            <strong>Importante:</strong> N√£o existe resposta certa ou errada. O mais importante √© voc√™ se reconhecer com sinceridade.<br>
            Caso alguma frase n√£o represente exatamente o que voc√™ pensa, mas se aproxima, selecione-a mesmo assim.
        </p>
        <p style="margin-top: 1rem;">
            üì≤ Instagram: <a href="https://instagram.com/nutrigiuliamano" target="_blank">@nutrigiuliamano</a><br>
            üìû WhatsApp: (11) 97592-5467
        </p>
    </div>
    """,
    unsafe_allow_html=True
)

# Dados pessoais
st.header("Seus dados")
nome = st.text_input("Nome completo")
email = st.text_input("E-mail")
celular = st.text_input("Celular (WhatsApp)")
st.markdown("---")

# Perguntas principais
perguntas_comportamento = [
    "Estar com algu√©m que est√° comendo me d√° vontade de comer tamb√©m.",
    "Quando me sinto tenso(a) ou estressado(a), frequentemente sinto necessidade de comer.",
    "Belisco entre as refei√ß√µes. Ex: pego umas uvas na geladeira enquanto caminho.",
    "Eu conscientemente me controlo durante as refei√ß√µes para evitar ganhar peso.",
    "Quando a comida me parece muito apetitosa, como mais do que o habitual.",
    "Quando meu peso aumenta, reduzo a quantidade do que como.",
    "Quando vejo ou sinto o aroma de algo muito gostoso, sinto um desejo forte de comer.",
    "Quando tenho algo muito saborosa para comer, como imediatamente.",
    "Durante as refei√ß√µes, controlo a quantidade do que como.",
    "Tenho vontade de comer quando estou adiando alguma tarefa.",
    "Consigo resistir a alimentos muito apetitosos.",
    "Levo em considera√ß√£o meus objetivos e valores na hora de escolher o que comer.",
    "Enquanto preparo a comida, costumo petiscar alguma coisa.",
    "Eu deliberadamente consumo pequenas por√ß√µes para controlar meu peso.",
    "Comi mesmo sem estar com fome porque estava entediado(a).",
    "Comi mesmo sem estar com fome porque estava me sentindo ansioso(a), triste ou estressado(a).",
    "Sinto que mere√ßo comer algo gostoso depois de um dia dif√≠cil.",
    "Como mesmo sem fome quando estou sobrecarregado(a) ou sem tempo.",
    "Evito desperdi√ßar comida mesmo quando estou satisfeito(a).",
    "Sinto que n√£o consigo parar de comer certos alimentos, mesmo sem fome.",
    "Tenho dificuldade em recusar comida quando insistem.",
    "Como mais do que quero s√≥ porque paguei ou √© uma ocasi√£o especial.",
    "Quando estou em eventos sociais, como para acompanhar os outros."
]

pensamentos_sabotadores = [
    "J√° pensei: 'J√° que comi um peda√ßo, agora vou comer tudo e recome√ßo amanh√£'.",
    "J√° pensei: 'Estou t√£o sem tempo, n√£o consigo seguir nada agora.'",
    "J√° pensei: 'N√£o posso desperdi√ßar, ent√£o vou comer mesmo sem fome.'",
    "Me senti obrigado(a) a comer porque insistiram, mesmo sem querer tanto.",
    "J√° pensei: 'J√° que paguei por isso, preciso aproveitar.'",
    "Comi em maior quantidade s√≥ porque era uma ocasi√£o especial ou algo que n√£o como frequentemente.",
    "J√° pensei: 'J√° que n√£o estou fazendo tudo certo, n√£o tem problema comer isso.'",
    "J√° pensei: 'Depois eu compenso isso.'",
    "Acreditei que merecia comer algo porque tive um dia ruim.",
    "Me deixei levar pela ideia de que '√© s√≥ hoje'."
]

opcoes_freq = ["Nunca", "√Äs vezes", "Frequentemente", "Quase sempre"]
opcoes_sabotagem = ["N√£o me identifico", "Me identifico um pouco", "Me identifico muito"]

# Pagina√ß√£o
por_pagina = 6
total_paginas = (len(perguntas_comportamento) + por_pagina - 1) // por_pagina

if "pagina" not in st.session_state:
    st.session_state.pagina = 1
if "respostas_comportamento" not in st.session_state:
    st.session_state.respostas_comportamento = [""] * len(perguntas_comportamento)
if "respostas_pensamentos" not in st.session_state:
    st.session_state.respostas_pensamentos = [""] * len(pensamentos_sabotadores)
if "respostas_enviadas" not in st.session_state:
    st.session_state.respostas_enviadas = False

# Bot√µes de navega√ß√£o
if "navegar_para" not in st.session_state:
    st.session_state.navegar_para = None

inicio = (st.session_state.pagina - 1) * por_pagina
fim = min(inicio + por_pagina, len(perguntas_comportamento))

if st.session_state.pagina <= total_paginas:
    st.subheader(f"üçΩÔ∏è Comportamentos Alimentares (P√°gina {st.session_state.pagina} de {total_paginas})")
    for i in range(inicio, fim):
        resposta = st.radio(perguntas_comportamento[i], opcoes_freq, key=f"comp_{i}")
        st.session_state.respostas_comportamento[i] = resposta

    col1, col2, col3 = st.columns([1, 1, 2])
    with col1:
        if st.button("‚¨ÖÔ∏è Voltar"):
            st.session_state.navegar_para = st.session_state.pagina - 1
    with col2:
        if st.button("‚û°Ô∏è Pr√≥ximo"):
            st.session_state.navegar_para = st.session_state.pagina + 1
    with col3:
        if st.session_state.pagina == total_paginas:
            if st.button("üß† Avan√ßar para Pensamentos Sabotadores"):
                st.session_state.navegar_para = total_paginas + 1

elif st.session_state.pagina == total_paginas + 1:
    st.subheader("üß† Pensamentos Sabotadores")
    st.markdown("Esses s√£o **pensamentos autom√°ticos comuns que podem sequenciar comportamentos contr√°rios aos seus objetivos de longo prazo**. Identific√°-los √© o primeiro passo para ter resultados diferentes!")

    for i, pensamento in enumerate(pensamentos_sabotadores):
        resposta = st.radio(pensamento, opcoes_sabotagem, key=f"pens_{i}")
        st.session_state.respostas_pensamentos[i] = resposta

    st.markdown("---")

    if st.button("üì® Enviar respostas"):
    if nome and email and celular:
        try:
            scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
            secret_dict = st.secrets["gcp_service_account"]
            creds = ServiceAccountCredentials.from_json_keyfile_dict(secret_dict, scope)
            client = gspread.authorize(creds)

            sheet = client.open("Raio-X Comportamental - Respostas").sheet1

            # Verificar e escrever cabe√ßalho, se ainda n√£o existir
            if sheet.row_count == 0 or sheet.cell(1, 1).value == '':
                header = ["Data e Hora", "Nome", "Email", "Celular"]
                header += [f"Pergunta {i+1}" for i in range(len(perguntas_comportamento))]
                header += [f"Pensamento {i+1}" for i in range(len(pensamentos_sabotadores))]
                header += ["Fome Emocional", "Comer por Influ√™ncia Externa", "Autocontrole e Valores"]
                sheet.insert_row(header, 1)

            # Calcular m√©dias por categoria
            valores = {"Nunca": 0, "√Äs vezes": 1, "Frequentemente": 2, "Quase sempre": 3}
            respostas_numericas = [valores[r] for r in st.session_state.respostas_comportamento]
            categorias = {
                "Fome Emocional": [1, 9, 14, 15, 16, 17],
                "Comer por Influ√™ncia Externa": [0, 2, 4, 6, 7, 12, 20, 22],
                "Autocontrole e Valores": [3, 5, 8, 10, 11, 13]
            }
            medias = [
                round(sum([respostas_numericas[i] for i in indices]) / len(indices), 1)
                for indices in categorias.values()
            ]

            # Montar linha de dados
            data = [datetime.now().strftime("%d/%m/%Y %H:%M:%S"), nome, email, celular]
            data += st.session_state.respostas_comportamento
            data += st.session_state.respostas_pensamentos
            data += medias

            sheet.append_row(data)

            st.session_state.respostas_enviadas = True
            st.success("Respostas enviadas com sucesso! Obrigada por participar üíõ")
        except Exception as e:
            st.error(f"Erro ao salvar na planilha: {e}")
    else:
        st.warning("Por favor, preencha todos os campos antes de enviar.")


     




    # An√°lise (ap√≥s envio)
    if st.session_state.respostas_enviadas:
        st.subheader("üîç Sua An√°lise Comportamental")

        valores = {"Nunca": 0, "√Äs vezes": 1, "Frequentemente": 2, "Quase sempre": 3}
        respostas_numericas = [valores[r] for r in st.session_state.respostas_comportamento]

        categorias = {
            "Fome Emocional": [1, 9, 14, 15, 16, 17],
            "Comer por Influ√™ncia Externa": [0, 2, 4, 6, 7, 12, 20, 22],
            "Autocontrole e Valores": [3, 5, 8, 10, 11, 13]
        }

        explicacoes = {
            "Fome Emocional": """
**Fome Emocional** refere-se ao impulso de comer em resposta a emo√ß√µes ‚Äî como estresse, tristeza, ansiedade ou t√©dio ‚Äî e n√£o √† fome f√≠sica.

- **Pontua√ß√£o baixa (0‚Äì1):** voc√™ demonstra equil√≠brio ao lidar com emo√ß√µes sem recorrer √† comida.
- **Pontua√ß√£o m√©dia (1.1‚Äì2):** indica que, √†s vezes, a comida √© usada como v√°lvula de escape. Isso √© comum e pode ser trabalhado!
- **Pontua√ß√£o alta (2.1‚Äì3):** a alimenta√ß√£o pode estar sendo usada com frequ√™ncia para regular emo√ß√µes. Isso merece aten√ß√£o, mas √© totalmente poss√≠vel de ser transformado com dedica√ß√£o e as estrat√©gias certas.
""",
            "Comer por Influ√™ncia Externa": """
**Comer por Influ√™ncia Externa** acontece quando comemos mais por est√≠mulos do ambiente do que por necessidade f√≠sica ‚Äî como cheiro, vis√£o de comida, press√£o social ou h√°bitos autom√°ticos.

- **Pontua√ß√£o baixa (0‚Äì1):** voc√™ tende a se guiar bem pelos seus sinais internos. de fome e saciedade.
- **Pontua√ß√£o m√©dia (1.1‚Äì2):** mostra que alguns est√≠mulos externos influenciam sua alimenta√ß√£o.
- **Pontua√ß√£o alta (2.1‚Äì3):** o ambiente pode estar determinando grande parte do seu comportamento alimentar. Pequenas mudan√ßas bem direcionadas podem ter grande impacto!
""",
            "Autocontrole e Valores": """
**Autocontrole e Valores** refletem o quanto suas escolhas alimentares est√£o alinhadas aos seus objetivos e autorregula√ß√£o.

- **Pontua√ß√£o baixa (0‚Äì1):** pode haver dificuldade em aplicar escolhas conscientes.
- **Pontua√ß√£o m√©dia (1.1‚Äì2):** voc√™ est√° no caminho, com espa√ßo para fortalecimento do autocontrole.
- **Pontua√ß√£o alta (2.1‚Äì3):** voc√™ demonstra alinhamento entre seus valores e comportamento. Muito positivo!
"""
        }

        for categoria, indices in categorias.items():
            respostas_cat = [respostas_numericas[i] for i in indices]
            media = sum(respostas_cat) / len(respostas_cat)
            st.markdown(f"### üî∏ {categoria}")
            st.markdown(f"**Sua pontua√ß√£o m√©dia:** `{media:.1f}`")
            st.markdown(explicacoes[categoria])
            st.markdown("---")

        st.info("üîç Este question√°rio ainda n√£o foi validado cientificamente em estudos publicados, mas foi baseado em instrumentos previamente validados na literatura. Os resultados n√£o t√™m valor diagn√≥stico, mas funcionam como um guia valioso para reflex√µes e acompanhamento nutricional")

# Aplicar a navega√ß√£o no final
if st.session_state.navegar_para:
    st.session_state.pagina = st.session_state.navegar_para
    st.session_state.navegar_para = None
    st.rerun()
