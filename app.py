import streamlit as st
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime

# Estilo antigo sem personaliza√ß√µes visuais refinadas
st.set_page_config(page_title="Raio-X Comportamental", layout="centered")

st.title("üìä Raio-X Comportamental")
st.markdown("Responda com sinceridade para entender melhor seus comportamentos e pensamentos ligados √† alimenta√ß√£o.")

# Dados pessoais
st.header("Seus dados")
nome = st.text_input("Nome completo")
email = st.text_input("E-mail")
celular = st.text_input("Celular (com DDD)")

st.markdown("---")

# Bloco de perguntas principais
st.subheader("üçΩÔ∏è Comportamentos Alimentares")
comportamentos = [
    "Estar com algu√©m que est√° comendo me d√° frequentemente vontade de comer tamb√©m.",
    "Quando me sinto tenso(a) ou estressado(a), frequentemente sinto que preciso comer.",
    "Entre as refei√ß√µes principais, eu frequentemente belisco peda√ßos de alimentos. Ex: abro a geladeira, pego umas uvas e como andando.",
    "Eu conscientemente me controlo nas refei√ß√µes para evitar ganhar peso.",
    "Se a comida me parece apetitosa, como mais do que o habitual.",
    "Se meu peso aumenta, como menos do que o habitual.",
    "Se vejo ou sinto o aroma de algo muito gostoso, sinto um desejo muito forte de comer.",
    "Se tenho alguma coisa muito saborosa para comer, como-a de imediato.",
    "Durante as refei√ß√µes, controlo a quantidade do que como.",
    "Tenho desejo de comer quando estou procrastinando algo.",
    "Consigo deixar de comer alimentos muito apetitosos.",
    "Levo em considera√ß√£o meus objetivos e valores quando escolho o que vou comer.",
    "Quando preparo uma refei√ß√£o, costumo petiscar alguma coisa.",
    "Eu deliberadamente consumo pequenas por√ß√µes para controlar meu peso.",
    "Comi mesmo sem estar com fome porque estava entediado(a).",
    "Comi mesmo sem estar com fome porque estava me sentindo ansioso(a), triste ou estressado(a).",
    "Sinto que mere√ßo comer algo gostoso depois de um dia dif√≠cil.",
    "Como mesmo sem fome quando estou sobrecarregado(a) ou sem tempo.",
    "Evito desperdi√ßar comida mesmo quando estou satisfeito(a).",
    "Sinto que n√£o consigo parar de comer certos alimentos, mesmo sem fome.",
    "Tenho dificuldade em recusar comida quando insistem.",
    "Como mais do que quero s√≥ porque paguei ou √© uma ocasi√£o especial.",
    "Quando estou em eventos sociais, como para acompanhar os outros."
]

opcoes_comportamento = ["Nunca", "√Äs vezes", "Frequentemente", "Quase sempre"]
respostas_comportamento = [st.radio(pergunta, opcoes_comportamento, key=f"comp_{i}") for i, pergunta in enumerate(comportamentos)]

st.markdown("---")

# Bloco de pensamentos sabotadores
st.subheader("üß† Pensamentos Sabotadores")
st.markdown("Esses s√£o **pensamentos comuns que podem atrapalhar** seus resultados. Se identificar com algum deles j√° √© um grande passo.")

pensamentos = [
    "J√° pensei: 'J√° que comi um peda√ßo, agora vou comer tudo e recome√ßo amanh√£'.",
    "J√° pensei: 'Estou t√£o sem tempo, n√£o consigo seguir nada agora.'",
    "J√° pensei: 'N√£o posso desperdi√ßar, ent√£o vou comer mesmo sem fome.'",
    "Me senti obrigado(a) a comer porque insistiram, mesmo sem querer tanto.",
    "J√° pensei: 'J√° que paguei por isso, preciso aproveitar.'",
    "Comi em maior quantidade s√≥ porque era uma ocasi√£o especial ou algo que n√£o como frequentemente.",
    "J√° pensei: 'J√° que n√£o estou fazendo tudo certo, n√£o tem problema comer isso.'",
    "J√° pensei: 'Depois eu compenso isso.'",
    "Acreditei que merecia comer algo porque tive um dia ruim.",
    "Me deixei levar pela ideia de que '√© s√≥ hoje'."
]

opcoes_pensamentos = ["N√£o me identifico", "Me identifico um pouco", "Me identifico muito"]
respostas_pensamentos = [st.radio(pensamento, opcoes_pensamentos, key=f"pens_{i}") for i, pensamento in enumerate(pensamentos)]

st.markdown("---")

# Bot√£o de envio
if st.button("üì® Enviar respostas"):
    if nome and email and celular:
        try:
            scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
            secret_dict = st.secrets["gcp_service_account"]
            creds = ServiceAccountCredentials.from_json_keyfile_dict(secret_dict, scope)
            client = gspread.authorize(creds)

            sheet = client.open("Raio-X Comportamental - Respostas").sheet1
            data = [datetime.now().strftime("%d/%m/%Y %H:%M:%S"), nome, email, celular] + respostas_comportamento + respostas_pensamentos
            sheet.append_row(data)

            st.success("Respostas enviadas com sucesso! Obrigada por participar üíõ")
        except Exception as e:
            st.error(f"Erro ao salvar na planilha: {e}")
    else:
        st.warning("Por favor, preencha todos os campos antes de enviar.")
